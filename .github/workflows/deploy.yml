name: Build Apps

on:
  push:
    branches:
      - main

permissions: write-all

env:
  MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
  MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
  MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
  MINIO_BUCKET: ${{ secrets.MINIO_BUCKET }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # - os: ubuntu-latest
          #   platform: linux
          #   build_cmd: flutter build apk --release
          #   artifact_path: myapp/build/app/outputs/flutter-apk/app-release.apk
          #   artifact_ext: apk

          # - os: macos-latest
          #   platform: darwin
          #   build_cmd: flutter build macos --release
          #   artifact_path: myapp/build/macos/Build/Products/Release/myapp.app
          #   artifact_ext: zip

          - os: windows-latest
            platform: windows
            build_cmd: flutter build windows --release
            artifact_path: myapp/build/windows/x64/runner/Release/myapp.exe
            artifact_ext: exe

    steps:
      - name: Setup MinIO client
        uses: yakubique/setup-minio-cli@v1

      # 配置 MinIO 客户端
      - name: Configure MinIO client
        run: |
          mc alias set myminio ${{ secrets.MINIO_ENDPOINT }} ${{ secrets.MINIO_ACCESS_KEY }} ${{ secrets.MINIO_SECRET_KEY }}

      # 从 MinIO 下载代码
      - name: Download code from MinIO
        run: |
          mc cp myminio/${{ secrets.MINIO_BUCKET }}/code.tar.gz ./
          gci .
          pwd

      # 解压代码
      - name: Extract code
        run: |
          tar -xzf code.tar.gz
          rm code.tar.gz
