name: Build Apps

on:
  push:
    branches:
      - main

permissions: write-all

env:
  MINIO_ENDPOINT: ${{ secrets.MINIO_ENDPOINT }}
  MINIO_ACCESS_KEY: ${{ secrets.MINIO_ACCESS_KEY }}
  MINIO_SECRET_KEY: ${{ secrets.MINIO_SECRET_KEY }}
  MINIO_BUCKET: ${{ secrets.MINIO_BUCKET }}

jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        include:
          # - os: ubuntu-latest
          #   platform: linux
          #   build_cmd: flutter build apk --release
          #   artifact_path: myapp/build/app/outputs/flutter-apk/app-release.apk
          #   artifact_ext: apk

          # - os: macos-latest
          #   platform: darwin
          #   build_cmd: flutter build macos --release
          #   artifact_path: myapp/build/macos/Build/Products/Release/myapp.app
          #   artifact_ext: zip

          - os: windows-latest
            platform: windows
            build_cmd: flutter build windows --release
            artifact_path: myapp/build/windows/x64/runner/Release/myapp.exe
            artifact_ext: exe

    steps:
      - name: Setup MinIO client
        if: runner.os != 'Windows'
        uses: yakubique/setup-minio-cli@v1

      # Windows: 下载 mc.exe
      - name: Download mc.exe for Windows
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          Write-Host "Downloading mc.exe..."
          Invoke-WebRequest -Uri "https://dl.min.io/client/mc/release/windows-amd64/mc.exe" -OutFile "mc.exe"
          Write-Host "mc.exe downloaded successfully"
          Get-Item mc.exe | Select-Object Length, LastWriteTime

      # 配置 MinIO 客户端
      - name: Configure MinIO client
        shell: pwsh
        run: |
          if ($IsWindows) {
            Write-Host "Configuring MinIO client for Windows..."
            $env:MC_HOST_myminio = "https://${{ secrets.MINIO_ACCESS_KEY }}:${{ secrets.MINIO_SECRET_KEY }}@${{ secrets.MINIO_ENDPOINT }}"
            Write-Host "MC_HOST_myminio environment variable set"
            ./mc.exe config host add myminio ${{ secrets.MINIO_ENDPOINT }} ${{ secrets.MINIO_ACCESS_KEY }} ${{ secrets.MINIO_SECRET_KEY }}
            Write-Host "MinIO configuration completed"
          } else {
            mc alias set myminio ${{ secrets.MINIO_ENDPOINT }} ${{ secrets.MINIO_ACCESS_KEY }} ${{ secrets.MINIO_SECRET_KEY }}
          }

      # 从 MinIO 下载代码
      - name: Download code from MinIO
        shell: pwsh
        run: |
          if ($IsWindows) {
            Write-Host "Current directory: $(Get-Location)"
            Write-Host "Listing MinIO bucket contents:"
            ./mc.exe ls "myminio/${{ secrets.MINIO_BUCKET }}/"
            
            Write-Host "Attempting to download code.tar.gz..."
            $downloadPath = Join-Path (Get-Location) "code.tar.gz"
            Write-Host "Download path: $downloadPath"
            
            try {
              ./mc.exe cp "myminio/${{ secrets.MINIO_BUCKET }}/code.tar.gz" "$downloadPath"
              if (Test-Path $downloadPath) {
                Write-Host "File downloaded successfully"
                Get-Item $downloadPath | Select-Object Length, LastWriteTime
              } else {
                Write-Host "File not found after download attempt"
                exit 1
              }
            } catch {
              Write-Host "Error downloading file: $_"
              exit 1
            }
          } else {
            mc cp myminio/${{ secrets.MINIO_BUCKET }}/code.tar.gz ./
          }
          
          Write-Host "Current directory contents:"
          Get-ChildItem

      # 解压代码
      - name: Extract code
        shell: pwsh
        run: |
          if ($IsWindows) {
            Write-Host "Extracting code.tar.gz..."
            if (Test-Path "code.tar.gz") {
              tar -xf code.tar.gz
              Remove-Item code.tar.gz
              Write-Host "Extraction completed"
            } else {
              Write-Host "code.tar.gz not found"
              exit 1
            }
          } else {
            tar -xzf code.tar.gz
            rm code.tar.gz
          }
